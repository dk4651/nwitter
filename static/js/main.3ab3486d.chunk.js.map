{"version":3,"sources":["routes/Auth.js","fbase.js","components/Nweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["Auth","useState","email","setEmail","password","setPassword","newAccount","setnewAccount","err","setErr","auth","getAuth","onChange","event","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","dbService","getFirestore","storageService","getStorage","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","updateDoc","attachmentUrl","src","width","heigt","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","useEffect","onSnapshot","collection","snapshot","nweetArray","docs","map","attachmentRef","ref","uid","uuidv4","uploadString","getDownloadURL","addDoc","CreatedAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","height","Profile","getMyNweets","dbRef","q","query","where","orderBy","getDocs","signOut","Navigation","to","displayName","AppRouter","isLoggedIn","exact","path","from","App","setIsLoggedIn","init","setInit","setUserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ab3486d.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {getAuth, createUserWithEmailAndPassword,signInWithEmailAndPassword,signInWithPopup,GoogleAuthProvider,GithubAuthProvider} from 'firebase/auth';\r\n\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setnewAccount] = useState(true);\r\n    const [err, setErr] = useState('');\r\n    const auth = getAuth();\r\n\r\n    const onChange = (event) => {\r\n        console.log(event.target.name);\r\n        const {target : {name, value}} = event;\r\n        if (name === 'email'){\r\n            setEmail(value);\r\n        } else if (name === 'password'){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let data;\r\n        try{\r\n            if(newAccount) {\r\n                data = await createUserWithEmailAndPassword(auth,email,password)\r\n            }else{\r\n                data = await signInWithEmailAndPassword (auth, email, password);\r\n            }\r\n            console.log(data)\r\n        }catch(error){\r\n            setErr(error.message)\r\n        }\r\n\r\n    };\r\n    const toggleAccount = () => setnewAccount((prev) => !prev);\r\n        //console.log({newAccount})\r\n        //if (newAccount === false){\r\n        //    setnewAccount(true)\r\n        //}else{\r\n        //    setnewAccount(false)\r\n        //}\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {target : {name}} = event;\r\n        let provider;\r\n        if(name === 'google'){\r\n            provider = new GoogleAuthProvider();\r\n\r\n        }else if(name === 'github'){\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        const data = await signInWithPopup(auth,provider);\r\n        console.log(data);\r\n    }\r\n\r\n\r\n    return(\r\n    <div>\r\n        <form onSubmit = {onSubmit}>\r\n            <input name = 'email' type='email' placeholder ='Email' required value ={email} onChange = {onChange}/>\r\n            <input name = 'password' type='password' placeholder = 'password' required value={password} onChange = {onChange}/>\r\n            <input type='submit' value = {newAccount ? 'Create Account' : 'Log In'} />\r\n            {err}\r\n        </form>\r\n     <div>\r\n         <div onClick = {toggleAccount}>{newAccount ? 'Create Account' : 'Log In'}</div>\r\n        <button name='google' onClick={onSocialClick}>Continue with Google</button>\r\n        <button name='github'onClick={onSocialClick}>Continue with Github</button>\r\n     </div>\r\n\r\n\r\n     </div>\r\n    );\r\n};\r\nexport default Auth;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport * as firebase from \"firebase/app\";\r\nimport {getAuth} from \"firebase/auth\"; //authentication을 쓰려면 선언을 해야한다 \r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport {getStorage} from 'firebase/storage';\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_apiKey,\r\n  authDomain: process.env.REACT_APP_authDomain,\r\n  projectId: process.env.REACT_APP_projectId,\r\n  storageBucket: process.env.REACT_APP_storageBucket,\r\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n  appId: process.env.REACT_APP_appId\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n//export const firebaseInstance = firebase;\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage(app);\r\n","import React,{useState} from 'react';\r\nimport { deleteDoc, doc,updateDoc} from 'firebase/firestore';\r\nimport { dbService } from 'fbase';\r\n\r\n\r\n\r\nconst Nweet = ({nweetObj,isOwner}) =>{\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n    //console.log(nweetObj)\r\n    \r\n\r\n    const onDeleteClick= async()=> { \r\n        const ok = window.confirm('Are you sure to delte?')\r\n        if(ok){\r\n            await deleteDoc(doc(dbService,'nweet',`${nweetObj.id}`))\r\n\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => { \r\n        const {target : {value}} = event;\r\n        setNewNweet(value);\r\n    }\r\n    const onEditClick = () => {\r\n        setEditing(true)\r\n\r\n    }\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService,'nweet',`${nweetObj.id}`),{\r\n            text:newNweet\r\n        })\r\n        setEditing(false);\r\n\r\n    }\r\n    const toggleEditing = () =>{\r\n        setEditing((prev) => !prev)\r\n    }\r\n    return(\r\n    <div>\r\n        {editing ? \r\n            <>\r\n            <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value = {newNweet} type ='text' placeholder='You can edit nweet'/> \r\n            <input type = 'submit' value = 'Edit'></input>\r\n            </form>\r\n            <button onClick ={toggleEditing}>Cancel</button>\r\n            </>\r\n            : \r\n            <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && <img src = {nweetObj.attachmentUrl} width = '50px' heigt = '50px' />}\r\n            {isOwner&&\r\n            <>\r\n            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n            <button onClick={onEditClick}>Edit Nweet</button>\r\n            </>}\r\n            </>\r\n        }\r\n    </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Nweet;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { dbService } from 'fbase';\r\nimport { addDoc, collection, getDocs, onSnapshot, query, orderBy } from 'firebase/firestore';\r\nimport Nweet from 'components/Nweet'\r\nimport {storageService} from 'fbase'\r\nimport {ref, uploadString, getDownloadURL} from 'firebase/storage'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    \r\n    //console.log(userObj.uid)\r\n    const [nweet,setNweet] = useState('');\r\n    const [nweets, setNweets] = useState([]);\r\n    const [attachment, setAttachment] = useState('');\r\n    \r\n    //const getNweets = async() => {\r\n    //    const dbNweets = await getDocs(collection(dbService,'nweet'));\r\n    //   dbNweets.forEach((document) => {\r\n    //        //console.log(document)\r\n    //        const nweetOj = {\r\n    //            ...document.data(),\r\n    //            id : document.id,\r\n    //            \r\n    //        };\r\n    \r\n    //        setNweets(prev => [nweetOj,...prev]);\r\n    //    }\r\n    //    )\r\n        \r\n    //}\r\n\r\n    useEffect(() =>{\r\n        //getNweets();\r\n        onSnapshot(collection(dbService,'nweet'),snapshot =>{\r\n        //onsole.log(snapshot.docs)\r\n        const nweetArray = snapshot.docs.map((doc) => ({id:doc.id,...doc.data()}));\r\n        \r\n        setNweets(nweetArray);  \r\n        })\r\n        \r\n\r\n    },[]);\r\n\r\n    const onSubmit = async (event) => {\r\n        \r\n        event.preventDefault();\r\n        let attachmentUrl = ''\r\n        if(attachment !== ''){\r\n        const attachmentRef = ref(storageService,`${userObj.uid}/${uuidv4()}`);\r\n        const response = await uploadString(attachmentRef,attachment,'data_url');\r\n        attachmentUrl = await getDownloadURL(ref(attachmentRef))\r\n        }\r\n\r\n        await addDoc(collection(dbService,'nweet'),{\r\n            text : nweet,\r\n            CreatedAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl : attachmentUrl\r\n         });\r\n         setNweet('');\r\n         setAttachment('');\r\n\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target : {value}} = event;\r\n        setNweet(value);\r\n    }\r\n    //\r\n    \r\n    const onFileChange = (event) => { \r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) =>{\r\n            const{currentTarget : {result}} = finishedEvent\r\n            setAttachment(result)\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n\r\n    }\r\n\r\n    const onClearAttachment = () =>{\r\n        setAttachment('');\r\n    }\r\n\r\nreturn(\r\n    <div>\r\n        <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value = {nweet} type ='text' placeholder='whats your feeling now?' maxLength={120}></input>\r\n            <input type = 'file' accept='image/*' onChange={onFileChange}></input>\r\n            <input type = 'submit' value = 'Nweet'></input>\r\n            {attachment && (<div>\r\n                <img src = {attachment} width = '50px' height = '50px' />\r\n                <button onClick={onClearAttachment}>Clear</button>\r\n                </div>)}\r\n\r\n        </form>\r\n\r\n        <div>\r\n            {nweets.map((nweet) => (\r\n                <Nweet key = {nweet.id} nweetObj = {nweet} isOwner = {nweet.creatorId===userObj.uid} />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Home;\r\n","import React, { useEffect } from 'react';\r\nimport {getAuth} from 'firebase/auth';\r\nimport { authService, dbService } from 'fbase';\r\nimport { collection, getDocs, orderBy, query, where } from 'firebase/firestore';\r\n//import { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({userObj}) => { \r\n\r\n    //const history = useHistory();\r\n    const auth = getAuth;\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        //history.push('/')\r\n    }\r\n\r\n    const getMyNweets = async() => {\r\n        const dbRef =  collection(dbService,'nweet');\r\n        const q = query(dbRef,where('creatorId','==', `${userObj.uid}`),orderBy('CreatedAt'))\r\n        const nweets = await getDocs(q)\r\n        nweets.docs.map(doc => console.log(doc.data()))\r\n       \r\n    }\r\n    useEffect(getMyNweets,[])\r\n\r\n    return(\r\n        <>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    \r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import react from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navigation = ({userObj}) => <nav>\r\n    <ul>\r\n        <li>\r\n            <Link to='/'>Home</Link>\r\n        </li>\r\n        <li>\r\n            <Link to='/profile'>{userObj.displayName}'s Profile</Link>\r\n        </li>\r\n\r\n    </ul>\r\n\r\n</nav>\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({isLoggedIn, userObj}) => {\r\n    \r\n    return (\r\n    <Router>\r\n        {isLoggedIn && <Navigation userObj = {userObj}/>}\r\n        <Switch>\r\n            {isLoggedIn ? (\r\n            <>\r\n            <Route exact path =\"/\">\r\n                <Home userObj = {userObj}/>\r\n            </Route>\r\n            <Route exact path =\"/profile\">\r\n                <Profile userObj = {userObj}/>\r\n            </Route>\r\n            <Redirect from ='*' to='/'></Redirect>\r\n            </>\r\n            ) : ( \r\n            <>\r\n            <Route exact path =\"/\"> \r\n                <Auth />\r\n            </Route>\r\n            <Redirect from ='*' to='/'></Redirect>\r\n            </>\r\n            )}\r\n        </Switch>\r\n    </Router>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n","import React, {useEffect, useState} from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from 'fbase';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\n\nfunction App() {\n   \n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n  const auth = getAuth();\n  const [userObj, setUserObj] = useState(null);\n  //console.log(authService.currentUser)\n  //setInterval(() => console.log(authService.currentUser),2000)\n  \n  //만약 초기화나 Auth.에 변화이벤트가 있을 경우 \n  //init을 true로 변경하고 isLoggedIn에 currentUser 정보를 넣어라 \n  //변화가 없다면 init은 false를 유지한다 \n  const AuthChanged = () => {\n    let user;\n    onAuthStateChanged(auth,(user) => {\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj(user);\n\n      }else{\n        setIsLoggedIn(false);\n      }\n      console.log(isLoggedIn)\n      setInit(true);}\n      );\n  }\n  useEffect(AuthChanged, []);\n\n  \n  return (\n  <>\n    {init ? <AppRouter isLoggedIn = {isLoggedIn} userObj = {userObj} /> :'initializing...'}\n  <footer>\n    &copy; {new Date().getFullYear()} Nwitter\n  </footer>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}